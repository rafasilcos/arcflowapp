#!/usr/bin/env node

/**
 * Script de verifica√ß√£o para a CTA Section do Scroll Infinito Avan√ßado
 * Verifica se todas as anima√ß√µes e elementos est√£o implementados corretamente
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Verificando implementa√ß√£o da CTA Section...\n');

// Verificar se os arquivos existem
const ctaSectionPath = path.join(__dirname, 'src/app/landing-scroll-infinito/components/CTASection.tsx');
const animationHookPath = path.join(__dirname, 'src/app/landing-scroll-infinito/hooks/useSectionAnimation.ts');
const testFilePath = path.join(__dirname, 'test-cta-section.html');

let allChecksPass = true;

function checkFile(filePath, description) {
    if (fs.existsSync(filePath)) {
        console.log(`‚úÖ ${description} existe`);
        return true;
    } else {
        console.log(`‚ùå ${description} n√£o encontrado`);
        allChecksPass = false;
        return false;
    }
}

function checkContent(filePath, patterns, description) {
    if (!fs.existsSync(filePath)) {
        console.log(`‚ùå ${description}: arquivo n√£o encontrado`);
        allChecksPass = false;
        return false;
    }

    const content = fs.readFileSync(filePath, 'utf8');
    let allPatternsFound = true;

    patterns.forEach(({ pattern, name }) => {
        if (content.includes(pattern)) {
            console.log(`  ‚úÖ ${name}`);
        } else {
            console.log(`  ‚ùå ${name} n√£o encontrado`);
            allPatternsFound = false;
            allChecksPass = false;
        }
    });

    return allPatternsFound;
}

// 1. Verificar arquivos principais
console.log('üìÅ Verificando arquivos principais:');
checkFile(ctaSectionPath, 'CTASection.tsx');
checkFile(animationHookPath, 'useSectionAnimation.ts');
checkFile(testFilePath, 'test-cta-section.html');

console.log('\nüìã Verificando estrutura do componente CTA:');
checkContent(ctaSectionPath, [
    { pattern: 'cta-main-container', name: 'Container principal com classe CSS' },
    { pattern: 'cta-title', name: 'T√≠tulo com classe CSS' },
    { pattern: 'cta-subtitle', name: 'Subt√≠tulo com classe CSS' },
    { pattern: 'cta-buttons', name: 'Container de bot√µes com classe CSS' },
    { pattern: 'cta-primary-button', name: 'Bot√£o prim√°rio com classe CSS' },
    { pattern: 'cta-secondary-button', name: 'Bot√£o secund√°rio com classe CSS' },
    { pattern: 'cta-trust-metrics', name: 'Container de m√©tricas com classe CSS' },
    { pattern: 'trust-metric', name: 'M√©tricas individuais com classe CSS' },
    { pattern: 'trust-number', name: 'N√∫meros das m√©tricas com classe CSS' },
    { pattern: 'trust-label', name: 'Labels das m√©tricas com classe CSS' },
    { pattern: 'cta-guarantee', name: 'Garantia com classe CSS' },
    { pattern: 'startProgress: 0.875', name: 'Progresso de in√≠cio correto (87.5%)' },
    { pattern: 'endProgress: 1', name: 'Progresso de fim correto (100%)' }
], 'CTASection.tsx');

console.log('\nüé¨ Verificando anima√ß√µes GSAP:');
checkContent(animationHookPath, [
    { pattern: "case 'cta':", name: 'Case CTA no switch de anima√ß√µes' },
    { pattern: 'ctaMainContainer', name: 'Seletor do container principal' },
    { pattern: 'ctaTitle', name: 'Seletor do t√≠tulo' },
    { pattern: 'ctaSubtitle', name: 'Seletor do subt√≠tulo' },
    { pattern: 'ctaButtons', name: 'Seletor dos bot√µes' },
    { pattern: 'trustMetrics', name: 'Seletor das m√©tricas' },
    { pattern: 'ctaPrimaryButton', name: 'Seletor do bot√£o prim√°rio' },
    { pattern: 'ctaGuarantee', name: 'Seletor da garantia' },
    { pattern: 'scale: 3', name: 'Zoom inicial dram√°tico (scale: 3)' },
    { pattern: 'rotationY: 45', name: 'Rota√ß√£o inicial' },
    { pattern: 'z: -200', name: 'Profundidade inicial' },
    { pattern: 'power3.out', name: 'Easing power3.out' },
    { pattern: 'back.out(1.7)', name: 'Easing back.out para bounce' },
    { pattern: 'stagger:', name: 'Anima√ß√£o stagger para m√©tricas' },
    { pattern: 'repeat: -1', name: 'Anima√ß√£o infinita para pulsa√ß√£o' },
    { pattern: 'yoyo: true', name: 'Efeito yoyo para pulsa√ß√£o' },
    { pattern: 'boxShadow:', name: 'Efeito de sombra pulsante' },
    { pattern: 'brightness(1.2)', name: 'Efeito de brilho pulsante' }
], 'useSectionAnimation.ts');

console.log('\nüß™ Verificando arquivo de teste:');
checkContent(testFilePath, [
    { pattern: 'testZoomIn()', name: 'Fun√ß√£o de teste para zoom in' },
    { pattern: 'testTrustMetrics()', name: 'Fun√ß√£o de teste para m√©tricas' },
    { pattern: 'testPulsatingCTA()', name: 'Fun√ß√£o de teste para CTA pulsante' },
    { pattern: 'updateCTAAnimation', name: 'Fun√ß√£o de atualiza√ß√£o da anima√ß√£o' },
    { pattern: 'ScrollTrigger', name: 'Integra√ß√£o com ScrollTrigger' },
    { pattern: 'progress >= 0.875', name: 'Detec√ß√£o correta do range da se√ß√£o (87.5%)' }
], 'test-cta-section.html');

// Verificar m√©tricas espec√≠ficas do ArcFlow
console.log('\nüìä Verificando m√©tricas do ArcFlow:');
checkContent(ctaSectionPath, [
    { pattern: '500+', name: 'M√©trica: 500+ escrit√≥rios' },
    { pattern: '35%', name: 'M√©trica: 35% aumento de margem' },
    { pattern: '40%', name: 'M√©trica: 40% mais produtividade' },
    { pattern: '95%', name: 'M√©trica: 95% satisfa√ß√£o' },
    { pattern: 'Entre no Fluxo', name: 'T√≠tulo principal correto' },
    { pattern: 'Come√ßar agora', name: 'CTA principal correto' },
    { pattern: 'Falar com especialista', name: 'CTA secund√°rio correto' },
    { pattern: 'Garantia de satisfa√ß√£o', name: 'Garantia presente' }
], 'CTASection.tsx');

// Verificar fases da anima√ß√£o
console.log('\n‚è±Ô∏è Verificando fases da anima√ß√£o:');
checkContent(animationHookPath, [
    { pattern: 'Fase 1: Zoom in dram√°tico', name: 'Coment√°rio da Fase 1 (87.5-90%)' },
    { pattern: 'Fase 2: Anima√ß√£o sequencial', name: 'Coment√°rio da Fase 2 (90-95%)' },
    { pattern: 'Fase 3: Anima√ß√£o dos elementos de confian√ßa', name: 'Coment√°rio da Fase 3 (90-95%)' },
    { pattern: 'Fase 4: Call to action pulsante', name: 'Coment√°rio da Fase 4 (95-100%)' },
    { pattern: 'duration: config.duration * 0.4', name: 'Dura√ß√£o da fase 1' },
    { pattern: 'duration: config.duration * 0.3', name: 'Dura√ß√£o dos elementos internos' },
    { pattern: 'duration: config.duration * 0.4', name: 'Dura√ß√£o das m√©tricas' }
], 'useSectionAnimation.ts');

// Verificar configura√ß√£o espec√≠fica da CTA
console.log('\n‚öôÔ∏è Verificando configura√ß√£o da CTA:');
checkContent(animationHookPath, [
    { pattern: "cta: { duration: 1.5, ease: 'power3.out' }", name: 'Configura√ß√£o espec√≠fica da CTA' },
    { pattern: 'transformOrigin: \'center center\'', name: 'Transform origin centralizado' },
    { pattern: 'amount: 0.3', name: 'Stagger amount para m√©tricas' },
    { pattern: 'from: "start"', name: 'Stagger direction' },
    { pattern: 'from: "random"', name: 'Stagger random para pulsa√ß√£o' }
], 'useSectionAnimation.ts');

// Resumo final
console.log('\n' + '='.repeat(50));
if (allChecksPass) {
    console.log('üéâ SUCESSO! Todas as verifica√ß√µes passaram!');
    console.log('\n‚ú® A CTA Section est√° implementada corretamente com:');
    console.log('   ‚Ä¢ Zoom dram√°tico de entrada (87.5-90%)');
    console.log('   ‚Ä¢ Anima√ß√£o sequencial dos elementos (90-95%)');
    console.log('   ‚Ä¢ M√©tricas de confian√ßa com stagger (90-95%)');
    console.log('   ‚Ä¢ Call to action pulsante cont√≠nuo (95-100%)');
    console.log('   ‚Ä¢ Todas as classes CSS necess√°rias');
    console.log('   ‚Ä¢ Arquivo de teste funcional');
    console.log('\nüöÄ Pr√≥ximos passos:');
    console.log('   1. Abrir test-cta-section.html no navegador');
    console.log('   2. Testar as anima√ß√µes usando os controles');
    console.log('   3. Verificar performance e suavidade');
    console.log('   4. Testar em diferentes dispositivos');
} else {
    console.log('‚ùå FALHA! Algumas verifica√ß√µes falharam.');
    console.log('\nüîß Corrija os problemas identificados acima antes de prosseguir.');
}
console.log('='.repeat(50));

// Informa√ß√µes adicionais
console.log('\nüìñ Informa√ß√µes da implementa√ß√£o:');
console.log('   ‚Ä¢ Se√ß√£o: CTA (Call to Action)');
console.log('   ‚Ä¢ Range de scroll: 87.5% - 100%');
console.log('   ‚Ä¢ Dura√ß√£o total: 1.5s');
console.log('   ‚Ä¢ Easing principal: power3.out');
console.log('   ‚Ä¢ Elementos animados: 8 (container, t√≠tulo, subt√≠tulo, bot√µes, m√©tricas, garantia)');
console.log('   ‚Ä¢ Anima√ß√µes cont√≠nuas: 2 (pulsa√ß√£o do bot√£o e m√©tricas)');

process.exit(allChecksPass ? 0 : 1);