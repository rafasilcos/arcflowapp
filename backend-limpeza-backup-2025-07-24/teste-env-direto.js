#!/usr/bin/env node

// TESTE DIRETO DO ARQUIVO .ENV
const fs = require('fs');
const path = require('path');

console.log('üîç TESTE DIRETO DO ARQUIVO .ENV');
console.log('=' .repeat(40));

// Verificar se arquivo .env existe
const envPath = path.join(__dirname, '.env');
console.log(`üìÅ Caminho do .env: ${envPath}`);
console.log(`üìã Arquivo existe: ${fs.existsSync(envPath) ? 'SIM' : 'N√ÉO'}`);

if (fs.existsSync(envPath)) {
  try {
    const envContent = fs.readFileSync(envPath, 'utf8');
    console.log('\nüìÑ CONTE√öDO DO .ENV:');
    console.log(envContent);
    
    // Carregar manualmente
    const lines = envContent.split('\n');
    const envVars = {};
    
    lines.forEach(line => {
      line = line.trim();
      if (line && !line.startsWith('#')) {
        const [key, ...valueParts] = line.split('=');
        if (key && valueParts.length > 0) {
          let value = valueParts.join('=');
          // Remover aspas se existirem
          if ((value.startsWith('"') && value.endsWith('"')) || 
              (value.startsWith("'") && value.endsWith("'"))) {
            value = value.slice(1, -1);
          }
          envVars[key] = value;
        }
      }
    });
    
    console.log('\nüîë VARI√ÅVEIS EXTRA√çDAS:');
    Object.keys(envVars).forEach(key => {
      if (key.includes('PASSWORD') || key.includes('SECRET')) {
        console.log(`${key}: [OCULTO]`);
      } else {
        console.log(`${key}: ${envVars[key]}`);
      }
    });
    
    // Testar conex√£o com essas vari√°veis
    if (envVars.DATABASE_URL) {
      console.log('\nüîÑ TESTANDO CONEX√ÉO COM DATABASE_URL...');
      
      const { Client } = require('pg');
      const client = new Client({
        connectionString: envVars.DATABASE_URL,
        ssl: { rejectUnauthorized: false }
      });
      
      client.connect()
        .then(() => {
          console.log('‚úÖ CONEX√ÉO ESTABELECIDA COM SUCESSO!');
          return client.query('SELECT NOW() as tempo');
        })
        .then(result => {
          console.log(`‚è∞ Tempo do servidor: ${result.rows[0].tempo}`);
          return client.end();
        })
        .then(() => {
          console.log('üéâ TESTE DE CONEX√ÉO CONCLU√çDO COM SUCESSO!');
        })
        .catch(error => {
          console.log(`‚ùå ERRO NA CONEX√ÉO: ${error.message}`);
          if (error.code) {
            console.log(`üìã C√≥digo do erro: ${error.code}`);
          }
        });
    } else {
      console.log('\n‚ö†Ô∏è  DATABASE_URL n√£o encontrada no .env');
    }
    
  } catch (error) {
    console.log(`‚ùå Erro ao ler .env: ${error.message}`);
  }
} else {
  console.log('\n‚ùå Arquivo .env n√£o encontrado!');
  console.log('üí° Crie o arquivo .env com as configura√ß√µes do banco');
}