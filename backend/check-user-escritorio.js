const { Client } = require('pg');
require('dotenv').config();

const client = new Client({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function checkUserEscritorio() {
  try {
    console.log('üîç VERIFICANDO ESCRIT√ìRIO DO USU√ÅRIO...\n');
    
    await client.connect();
    console.log('‚úÖ Conectado ao banco');
    
    // 1. Buscar dados do usu√°rio admin@arcflow.com
    const userResult = await client.query(`
      SELECT u.*, e.nome as escritorio_nome, e.id as escritorio_id_real
      FROM users u 
      LEFT JOIN escritorios e ON u.escritorio_id = e.id 
      WHERE u.email = $1
    `, ['admin@arcflow.com']);
    
    if (userResult.rows.length === 0) {
      console.log('‚ùå Usu√°rio admin@arcflow.com n√£o encontrado!');
      return;
    }
    
    const user = userResult.rows[0];
    console.log('üë§ DADOS DO USU√ÅRIO:');
    console.log(`   Email: ${user.email}`);
    console.log(`   Nome: ${user.nome}`);
    console.log(`   Escrit√≥rio ID: ${user.escritorio_id}`);
    console.log(`   Escrit√≥rio Nome: ${user.escritorio_nome || 'N√ÉO ENCONTRADO'}`);
    console.log(`   Ativo: ${user.is_active}`);
    
    // 2. Listar todos os escrit√≥rios
    const escritoriosResult = await client.query(`
      SELECT id, nome FROM escritorios ORDER BY created_at DESC
    `);
    
    console.log('\nüè¢ TODOS OS ESCRIT√ìRIOS:');
    escritoriosResult.rows.forEach((escritorio, index) => {
      const isUserEscritorio = escritorio.id === user.escritorio_id;
      console.log(`   ${index + 1}. ${escritorio.nome} (ID: ${escritorio.id}) ${isUserEscritorio ? '‚Üê USU√ÅRIO ADMIN' : ''}`);
    });
    
    // 3. Verificar clientes por escrit√≥rio
    console.log('\nüìä CLIENTES POR ESCRIT√ìRIO:');
    for (const escritorio of escritoriosResult.rows) {
      const clientesResult = await client.query(`
        SELECT COUNT(*) as total FROM clientes WHERE escritorio_id = $1
      `, [escritorio.id]);
      
      const total = clientesResult.rows[0].total;
      const isUserEscritorio = escritorio.id === user.escritorio_id;
      console.log(`   ${escritorio.nome}: ${total} cliente(s) ${isUserEscritorio ? '‚Üê ESCRIT√ìRIO DO ADMIN' : ''}`);
    }
    
    // 4. DIAGN√ìSTICO
    console.log('\nüéØ DIAGN√ìSTICO:');
    if (user.escritorio_id) {
      const clientesDoUsuario = await client.query(`
        SELECT COUNT(*) as total FROM clientes WHERE escritorio_id = $1
      `, [user.escritorio_id]);
      
      const totalClientesUsuario = clientesDoUsuario.rows[0].total;
      console.log(`   O usu√°rio admin@arcflow.com pertence ao escrit√≥rio: ${user.escritorio_nome || 'NOME N√ÉO ENCONTRADO'}`);
      console.log(`   Este escrit√≥rio tem ${totalClientesUsuario} cliente(s)`);
      
      if (totalClientesUsuario === 0) {
        console.log('   ‚ùå PROBLEMA: O escrit√≥rio do usu√°rio n√£o tem clientes!');
        console.log('   üí° SOLU√á√ÉO: Precisa criar clientes para este escrit√≥rio ou mudar o usu√°rio de escrit√≥rio');
      } else {
        console.log('   ‚úÖ Este escrit√≥rio tem clientes, mas API pode ter outro problema');
      }
    } else {
      console.log('   ‚ùå PROBLEMA CR√çTICO: Usu√°rio n√£o tem escrit√≥rio_id definido!');
    }
    
  } catch (error) {
    console.error('‚ùå ERRO:', error.message);
    console.error('Stack:', error.stack);
  } finally {
    await client.end();
  }
}

checkUserEscritorio(); 